digraph ParseTree {
  node [shape=box, fontname="Arial", fontsize=10];
  node0 [label="Program"];
  node1 [label="ClassDefinition"];
  node2 [label="Keyword: class"];
  node1 -> node2;
  node3 [label="Identifier: Car"];
  node1 -> node3;
  node4 [label="Delimiter: :"];
  node1 -> node4;
  node5 [label="Suite"];
  node6 [label="FunctionDefinition"];
  node7 [label="Keyword: def"];
  node6 -> node7;
  node8 [label="Identifier: __init__"];
  node6 -> node8;
  node9 [label="Delimiter: ("];
  node6 -> node9;
  node10 [label="Parameters"];
  node11 [label="Parameter: self"];
  node10 -> node11;
  node12 [label="Delimiter: ,"];
  node10 -> node12;
  node13 [label="Parameter: name"];
  node10 -> node13;
  node6 -> node10;
  node14 [label="Delimiter: )"];
  node6 -> node14;
  node15 [label="Delimiter: :"];
  node6 -> node15;
  node16 [label="Suite"];
  node17 [label="Assignment"];
  node18 [label="IdentifierList"];
  node19 [label="AttributeAccess"];
  node20 [label="Identifier: self"];
  node19 -> node20;
  node21 [label="Delimiter: ."];
  node19 -> node21;
  node22 [label="Identifier: name"];
  node19 -> node22;
  node18 -> node19;
  node17 -> node18;
  node23 [label="AssignOp: ="];
  node17 -> node23;
  node24 [label="ExpressionList"];
  node25 [label="Identifier: name"];
  node24 -> node25;
  node17 -> node24;
  node16 -> node17;
  node6 -> node16;
  node5 -> node6;
  node26 [label="FunctionDefinition"];
  node27 [label="Keyword: def"];
  node26 -> node27;
  node28 [label="Identifier: display"];
  node26 -> node28;
  node29 [label="Delimiter: ("];
  node26 -> node29;
  node30 [label="Parameters"];
  node31 [label="Parameter: self"];
  node30 -> node31;
  node26 -> node30;
  node32 [label="Delimiter: )"];
  node26 -> node32;
  node33 [label="Delimiter: :"];
  node26 -> node33;
  node34 [label="Suite"];
  node35 [label="FunctionCallStatement"];
  node36 [label="Identifier: print"];
  node35 -> node36;
  node37 [label="Delimiter: ("];
  node35 -> node37;
  node38 [label="Arguments"];
  node39 [label="Literal: f\"name: {self.name}\""];
  node38 -> node39;
  node35 -> node38;
  node40 [label="Delimiter: )"];
  node35 -> node40;
  node34 -> node35;
  node26 -> node34;
  node5 -> node26;
  node1 -> node5;
  node0 -> node1;
  node41 [label="Assignment"];
  node42 [label="IdentifierList"];
  node43 [label="Identifier: list"];
  node42 -> node43;
  node41 -> node42;
  node44 [label="AssignOp: ="];
  node41 -> node44;
  node45 [label="ExpressionList"];
  node46 [label="List"];
  node47 [label="Delimiter: ["];
  node46 -> node47;
  node48 [label="Literal: 1"];
  node46 -> node48;
  node49 [label="Delimiter: ,"];
  node46 -> node49;
  node50 [label="Literal: 2"];
  node46 -> node50;
  node51 [label="Delimiter: ,"];
  node46 -> node51;
  node52 [label="Literal: 3"];
  node46 -> node52;
  node53 [label="Delimiter: ,"];
  node46 -> node53;
  node54 [label="Literal: 4"];
  node46 -> node54;
  node55 [label="Delimiter: ,"];
  node46 -> node55;
  node56 [label="Literal: 5"];
  node46 -> node56;
  node57 [label="Delimiter: ]"];
  node46 -> node57;
  node45 -> node46;
  node41 -> node45;
  node0 -> node41;
  node58 [label="Assignment"];
  node59 [label="IdentifierList"];
  node60 [label="Identifier: tuple"];
  node59 -> node60;
  node58 -> node59;
  node61 [label="AssignOp: ="];
  node58 -> node61;
  node62 [label="ExpressionList"];
  node63 [label="Tuple"];
  node64 [label="Delimiter: ("];
  node63 -> node64;
  node65 [label="Literal: 1"];
  node63 -> node65;
  node66 [label="Delimiter: ,"];
  node63 -> node66;
  node67 [label="Literal: 2"];
  node63 -> node67;
  node68 [label="Delimiter: ,"];
  node63 -> node68;
  node69 [label="Literal: 3"];
  node63 -> node69;
  node70 [label="Delimiter: ,"];
  node63 -> node70;
  node71 [label="Literal: 4"];
  node63 -> node71;
  node72 [label="Delimiter: ,"];
  node63 -> node72;
  node73 [label="Literal: 5"];
  node63 -> node73;
  node74 [label="Delimiter: )"];
  node63 -> node74;
  node62 -> node63;
  node58 -> node62;
  node0 -> node58;
  node75 [label="FunctionDefinition"];
  node76 [label="Keyword: def"];
  node75 -> node76;
  node77 [label="Identifier: add"];
  node75 -> node77;
  node78 [label="Delimiter: ("];
  node75 -> node78;
  node79 [label="Parameters"];
  node80 [label="Parameter: x"];
  node79 -> node80;
  node81 [label="Delimiter: ,"];
  node79 -> node81;
  node82 [label="Parameter: y"];
  node79 -> node82;
  node75 -> node79;
  node83 [label="Delimiter: )"];
  node75 -> node83;
  node84 [label="Delimiter: :"];
  node75 -> node84;
  node85 [label="Suite"];
  node86 [label="Assignment"];
  node87 [label="IdentifierList"];
  node88 [label="Identifier: result"];
  node87 -> node88;
  node86 -> node87;
  node89 [label="AssignOp: ="];
  node86 -> node89;
  node90 [label="ExpressionList"];
  node91 [label="BinaryOp: +"];
  node92 [label="Identifier: x"];
  node91 -> node92;
  node93 [label="Identifier: y"];
  node91 -> node93;
  node90 -> node91;
  node86 -> node90;
  node85 -> node86;
  node94 [label="FunctionCallStatement"];
  node95 [label="Identifier: print"];
  node94 -> node95;
  node96 [label="Delimiter: ("];
  node94 -> node96;
  node97 [label="Arguments"];
  node98 [label="Literal: \"The sum is:\""];
  node97 -> node98;
  node99 [label="Delimiter: ,"];
  node97 -> node99;
  node100 [label="Identifier: result"];
  node97 -> node100;
  node94 -> node97;
  node101 [label="Delimiter: )"];
  node94 -> node101;
  node85 -> node94;
  node102 [label="ReturnStatement"];
  node103 [label="Keyword: return"];
  node102 -> node103;
  node104 [label="Identifier: result"];
  node102 -> node104;
  node85 -> node102;
  node75 -> node85;
  node0 -> node75;
  node105 [label="Assignment"];
  node106 [label="IdentifierList"];
  node107 [label="Identifier: z"];
  node106 -> node107;
  node105 -> node106;
  node108 [label="AssignOp: ="];
  node105 -> node108;
  node109 [label="ExpressionList"];
  node110 [label="FunctionCall"];
  node111 [label="Identifier: add"];
  node110 -> node111;
  node112 [label="Delimiter: ("];
  node110 -> node112;
  node113 [label="Arguments"];
  node114 [label="Literal: 5"];
  node113 -> node114;
  node115 [label="Delimiter: ,"];
  node113 -> node115;
  node116 [label="Literal: 3"];
  node113 -> node116;
  node110 -> node113;
  node117 [label="Delimiter: )"];
  node110 -> node117;
  node109 -> node110;
  node105 -> node109;
  node0 -> node105;
  node118 [label="IfStatement"];
  node119 [label="Keyword: if"];
  node118 -> node119;
  node120 [label="ComparisonOp: >"];
  node121 [label="Identifier: z"];
  node120 -> node121;
  node122 [label="Literal: 10"];
  node120 -> node122;
  node118 -> node120;
  node123 [label="Suite"];
  node124 [label="FunctionCallStatement"];
  node125 [label="Identifier: print"];
  node124 -> node125;
  node126 [label="Delimiter: ("];
  node124 -> node126;
  node127 [label="Arguments"];
  node128 [label="Literal: \"z is greater than 10\""];
  node127 -> node128;
  node124 -> node127;
  node129 [label="Delimiter: )"];
  node124 -> node129;
  node123 -> node124;
  node130 [label="Assignment"];
  node131 [label="IdentifierList"];
  node132 [label="Identifier: z"];
  node131 -> node132;
  node130 -> node131;
  node133 [label="AssignOp: -="];
  node130 -> node133;
  node134 [label="ExpressionList"];
  node135 [label="Literal: 1"];
  node134 -> node135;
  node130 -> node134;
  node123 -> node130;
  node118 -> node123;
  node136 [label="ElseClause"];
  node137 [label="Keyword: else"];
  node136 -> node137;
  node138 [label="Suite"];
  node139 [label="FunctionCallStatement"];
  node140 [label="Identifier: print"];
  node139 -> node140;
  node141 [label="Delimiter: ("];
  node139 -> node141;
  node142 [label="Arguments"];
  node143 [label="Literal: \"z is not greater than 10\""];
  node142 -> node143;
  node139 -> node142;
  node144 [label="Delimiter: )"];
  node139 -> node144;
  node138 -> node139;
  node145 [label="Assignment"];
  node146 [label="IdentifierList"];
  node147 [label="Identifier: z"];
  node146 -> node147;
  node145 -> node146;
  node148 [label="AssignOp: +="];
  node145 -> node148;
  node149 [label="ExpressionList"];
  node150 [label="Literal: 1"];
  node149 -> node150;
  node145 -> node149;
  node138 -> node145;
  node136 -> node138;
  node118 -> node136;
  node0 -> node118;
  node151 [label="FunctionDefinition"];
  node152 [label="Keyword: def"];
  node151 -> node152;
  node153 [label="Identifier: main"];
  node151 -> node153;
  node154 [label="Delimiter: ("];
  node151 -> node154;
  node155 [label="Parameters"];
  node151 -> node155;
  node156 [label="Delimiter: )"];
  node151 -> node156;
  node157 [label="Delimiter: :"];
  node151 -> node157;
  node158 [label="Suite"];
  node159 [label="Assignment"];
  node160 [label="IdentifierList"];
  node161 [label="Identifier: car1"];
  node160 -> node161;
  node159 -> node160;
  node162 [label="AssignOp: ="];
  node159 -> node162;
  node163 [label="ExpressionList"];
  node164 [label="FunctionCall"];
  node165 [label="Identifier: Car"];
  node164 -> node165;
  node166 [label="Delimiter: ("];
  node164 -> node166;
  node167 [label="Arguments"];
  node168 [label="Literal: \"Honda\""];
  node167 -> node168;
  node164 -> node167;
  node169 [label="Delimiter: )"];
  node164 -> node169;
  node163 -> node164;
  node159 -> node163;
  node158 -> node159;
  node170 [label="ExpressionStatement"];
  node171 [label="FunctionCall"];
  node172 [label="AttributeAccess"];
  node173 [label="Identifier: car1"];
  node172 -> node173;
  node174 [label="Delimiter: ."];
  node172 -> node174;
  node175 [label="Identifier: display"];
  node172 -> node175;
  node171 -> node172;
  node176 [label="Delimiter: ("];
  node171 -> node176;
  node177 [label="Arguments"];
  node171 -> node177;
  node178 [label="Delimiter: )"];
  node171 -> node178;
  node170 -> node171;
  node158 -> node170;
  node179 [label="FunctionCallStatement"];
  node180 [label="Identifier: print"];
  node179 -> node180;
  node181 [label="Delimiter: ("];
  node179 -> node181;
  node182 [label="Arguments"];
  node183 [label="FunctionCall"];
  node184 [label="AttributeAccess"];
  node185 [label="AttributeAccess"];
  node186 [label="Identifier: car1"];
  node185 -> node186;
  node187 [label="Delimiter: ."];
  node185 -> node187;
  node188 [label="Identifier: name"];
  node185 -> node188;
  node184 -> node185;
  node189 [label="Delimiter: ."];
  node184 -> node189;
  node190 [label="Identifier: upper"];
  node184 -> node190;
  node183 -> node184;
  node191 [label="Delimiter: ("];
  node183 -> node191;
  node192 [label="Arguments"];
  node183 -> node192;
  node193 [label="Delimiter: )"];
  node183 -> node193;
  node182 -> node183;
  node179 -> node182;
  node194 [label="Delimiter: )"];
  node179 -> node194;
  node158 -> node179;
  node151 -> node158;
  node0 -> node151;
  node195 [label="IfStatement"];
  node196 [label="Keyword: if"];
  node195 -> node196;
  node197 [label="ComparisonOp: =="];
  node198 [label="Identifier: __name__"];
  node197 -> node198;
  node199 [label="Literal: \"__main__\""];
  node197 -> node199;
  node195 -> node197;
  node200 [label="Suite"];
  node201 [label="FunctionCallStatement"];
  node202 [label="Identifier: main"];
  node201 -> node202;
  node203 [label="Delimiter: ("];
  node201 -> node203;
  node204 [label="Arguments"];
  node201 -> node204;
  node205 [label="Delimiter: )"];
  node201 -> node205;
  node200 -> node201;
  node195 -> node200;
  node0 -> node195;
}
