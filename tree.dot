digraph ParseTree {
  node [shape=box, fontname="Arial", fontsize=10];
  node0 [label="Program"];
  node1 [label="ClassDefinition"];
  node2 [label="Keyword: class"];
  node1 -> node2;
  node3 [label="Identifier: Car"];
  node1 -> node3;
  node4 [label="Delimiter: :"];
  node1 -> node4;
  node5 [label="Suite"];
  node6 [label="FunctionDefinition"];
  node7 [label="Keyword: def"];
  node6 -> node7;
  node8 [label="Identifier: __init__"];
  node6 -> node8;
  node9 [label="Delimiter: ("];
  node6 -> node9;
  node10 [label="Parameters"];
  node11 [label="Parameter: self"];
  node10 -> node11;
  node12 [label="Delimiter: ,"];
  node10 -> node12;
  node13 [label="Parameter: name"];
  node10 -> node13;
  node6 -> node10;
  node14 [label="Delimiter: )"];
  node6 -> node14;
  node15 [label="Delimiter: :"];
  node6 -> node15;
  node16 [label="Suite"];
  node17 [label="Assignment"];
  node18 [label="IdentifierList"];
  node19 [label="AttributeAccess"];
  node20 [label="Identifier: self"];
  node19 -> node20;
  node21 [label="Delimiter: ."];
  node19 -> node21;
  node22 [label="Identifier: name"];
  node19 -> node22;
  node18 -> node19;
  node17 -> node18;
  node23 [label="AssignOp: ="];
  node17 -> node23;
  node24 [label="Identifier: name"];
  node17 -> node24;
  node16 -> node17;
  node6 -> node16;
  node5 -> node6;
  node25 [label="FunctionDefinition"];
  node26 [label="Keyword: def"];
  node25 -> node26;
  node27 [label="Identifier: display"];
  node25 -> node27;
  node28 [label="Delimiter: ("];
  node25 -> node28;
  node29 [label="Parameters"];
  node30 [label="Parameter: self"];
  node29 -> node30;
  node25 -> node29;
  node31 [label="Delimiter: )"];
  node25 -> node31;
  node32 [label="Delimiter: :"];
  node25 -> node32;
  node33 [label="Suite"];
  node34 [label="FunctionCallStatement"];
  node35 [label="Identifier: print"];
  node34 -> node35;
  node36 [label="Delimiter: ("];
  node34 -> node36;
  node37 [label="Arguments"];
  node38 [label="Literal: f\"name: {self.name}\""];
  node37 -> node38;
  node34 -> node37;
  node39 [label="Delimiter: )"];
  node34 -> node39;
  node33 -> node34;
  node25 -> node33;
  node5 -> node25;
  node1 -> node5;
  node0 -> node1;
  node40 [label="Assignment"];
  node41 [label="IdentifierList"];
  node42 [label="Identifier: list"];
  node41 -> node42;
  node40 -> node41;
  node43 [label="AssignOp: ="];
  node40 -> node43;
  node44 [label="List"];
  node45 [label="Delimiter: ["];
  node44 -> node45;
  node46 [label="Literal: 1"];
  node44 -> node46;
  node47 [label="Delimiter: ,"];
  node44 -> node47;
  node48 [label="Literal: 2"];
  node44 -> node48;
  node49 [label="Delimiter: ,"];
  node44 -> node49;
  node50 [label="Literal: 3"];
  node44 -> node50;
  node51 [label="Delimiter: ,"];
  node44 -> node51;
  node52 [label="Literal: 4"];
  node44 -> node52;
  node53 [label="Delimiter: ,"];
  node44 -> node53;
  node54 [label="Literal: 5"];
  node44 -> node54;
  node55 [label="Delimiter: ]"];
  node44 -> node55;
  node40 -> node44;
  node0 -> node40;
  node56 [label="Assignment"];
  node57 [label="IdentifierList"];
  node58 [label="Identifier: tuple"];
  node57 -> node58;
  node56 -> node57;
  node59 [label="AssignOp: ="];
  node56 -> node59;
  node60 [label="Tuple"];
  node61 [label="Delimiter: ("];
  node60 -> node61;
  node62 [label="Literal: 1"];
  node60 -> node62;
  node63 [label="Delimiter: ,"];
  node60 -> node63;
  node64 [label="Literal: 2"];
  node60 -> node64;
  node65 [label="Delimiter: ,"];
  node60 -> node65;
  node66 [label="Literal: 3"];
  node60 -> node66;
  node67 [label="Delimiter: ,"];
  node60 -> node67;
  node68 [label="Literal: 4"];
  node60 -> node68;
  node69 [label="Delimiter: ,"];
  node60 -> node69;
  node70 [label="Literal: 5"];
  node60 -> node70;
  node71 [label="Delimiter: )"];
  node60 -> node71;
  node56 -> node60;
  node0 -> node56;
  node72 [label="FunctionDefinition"];
  node73 [label="Keyword: def"];
  node72 -> node73;
  node74 [label="Identifier: add"];
  node72 -> node74;
  node75 [label="Delimiter: ("];
  node72 -> node75;
  node76 [label="Parameters"];
  node77 [label="Parameter: x"];
  node76 -> node77;
  node78 [label="Delimiter: ,"];
  node76 -> node78;
  node79 [label="Parameter: y"];
  node76 -> node79;
  node72 -> node76;
  node80 [label="Delimiter: )"];
  node72 -> node80;
  node81 [label="Delimiter: :"];
  node72 -> node81;
  node82 [label="Suite"];
  node83 [label="Assignment"];
  node84 [label="IdentifierList"];
  node85 [label="Identifier: result"];
  node84 -> node85;
  node83 -> node84;
  node86 [label="AssignOp: ="];
  node83 -> node86;
  node87 [label="ExpressionList"];
  node88 [label="Identifier: x"];
  node87 -> node88;
  node89 [label="BinaryOp: +"];
  node87 -> node89;
  node90 [label="Identifier: y"];
  node87 -> node90;
  node83 -> node87;
  node82 -> node83;
  node91 [label="FunctionCallStatement"];
  node92 [label="Identifier: print"];
  node91 -> node92;
  node93 [label="Delimiter: ("];
  node91 -> node93;
  node94 [label="Arguments"];
  node95 [label="Literal: \"The sum is:\""];
  node94 -> node95;
  node96 [label="Delimiter: ,"];
  node94 -> node96;
  node97 [label="Identifier: result"];
  node94 -> node97;
  node91 -> node94;
  node98 [label="Delimiter: )"];
  node91 -> node98;
  node82 -> node91;
  node99 [label="ReturnStatement"];
  node100 [label="Keyword: return"];
  node99 -> node100;
  node101 [label="Identifier: result"];
  node99 -> node101;
  node82 -> node99;
  node72 -> node82;
  node0 -> node72;
  node102 [label="Assignment"];
  node103 [label="IdentifierList"];
  node104 [label="Identifier: z"];
  node103 -> node104;
  node102 -> node103;
  node105 [label="AssignOp: ="];
  node102 -> node105;
  node106 [label="FunctionCall"];
  node107 [label="Identifier: add"];
  node106 -> node107;
  node108 [label="Delimiter: ("];
  node106 -> node108;
  node109 [label="Arguments"];
  node110 [label="Literal: 5"];
  node109 -> node110;
  node111 [label="Delimiter: ,"];
  node109 -> node111;
  node112 [label="Literal: 3"];
  node109 -> node112;
  node106 -> node109;
  node113 [label="Delimiter: )"];
  node106 -> node113;
  node102 -> node106;
  node0 -> node102;
  node114 [label="IfStatement"];
  node115 [label="Keyword: if"];
  node114 -> node115;
  node116 [label="Comparison"];
  node117 [label="Identifier: z"];
  node116 -> node117;
  node118 [label="ComparisonOp: >"];
  node116 -> node118;
  node119 [label="Literal: 10"];
  node116 -> node119;
  node114 -> node116;
  node120 [label="Suite"];
  node121 [label="FunctionCallStatement"];
  node122 [label="Identifier: print"];
  node121 -> node122;
  node123 [label="Delimiter: ("];
  node121 -> node123;
  node124 [label="Arguments"];
  node125 [label="Literal: \"z is greater than 10\""];
  node124 -> node125;
  node121 -> node124;
  node126 [label="Delimiter: )"];
  node121 -> node126;
  node120 -> node121;
  node127 [label="Assignment"];
  node128 [label="IdentifierList"];
  node129 [label="Identifier: z"];
  node128 -> node129;
  node127 -> node128;
  node130 [label="AssignOp: -="];
  node127 -> node130;
  node131 [label="Literal: 1"];
  node127 -> node131;
  node120 -> node127;
  node114 -> node120;
  node132 [label="ElifClause"];
  node133 [label="Keyword: elif"];
  node132 -> node133;
  node134 [label="Comparison"];
  node135 [label="Identifier: z"];
  node134 -> node135;
  node136 [label="ComparisonOp: <"];
  node134 -> node136;
  node137 [label="Literal: 10"];
  node134 -> node137;
  node132 -> node134;
  node138 [label="Suite"];
  node139 [label="FunctionCallStatement"];
  node140 [label="Identifier: print"];
  node139 -> node140;
  node141 [label="Delimiter: ("];
  node139 -> node141;
  node142 [label="Arguments"];
  node143 [label="Literal: \"z is less than 10\""];
  node142 -> node143;
  node139 -> node142;
  node144 [label="Delimiter: )"];
  node139 -> node144;
  node138 -> node139;
  node145 [label="Assignment"];
  node146 [label="IdentifierList"];
  node147 [label="Identifier: z"];
  node146 -> node147;
  node145 -> node146;
  node148 [label="AssignOp: +="];
  node145 -> node148;
  node149 [label="Literal: 1"];
  node145 -> node149;
  node138 -> node145;
  node132 -> node138;
  node114 -> node132;
  node150 [label="ElseClause"];
  node151 [label="Keyword: else"];
  node150 -> node151;
  node152 [label="Suite"];
  node153 [label="FunctionCallStatement"];
  node154 [label="Identifier: print"];
  node153 -> node154;
  node155 [label="Delimiter: ("];
  node153 -> node155;
  node156 [label="Arguments"];
  node157 [label="Literal: \"z is equal to 10\""];
  node156 -> node157;
  node153 -> node156;
  node158 [label="Delimiter: )"];
  node153 -> node158;
  node152 -> node153;
  node150 -> node152;
  node114 -> node150;
  node0 -> node114;
  node159 [label="FunctionDefinition"];
  node160 [label="Keyword: def"];
  node159 -> node160;
  node161 [label="Identifier: main"];
  node159 -> node161;
  node162 [label="Delimiter: ("];
  node159 -> node162;
  node163 [label="Parameters"];
  node159 -> node163;
  node164 [label="Delimiter: )"];
  node159 -> node164;
  node165 [label="Delimiter: :"];
  node159 -> node165;
  node166 [label="Suite"];
  node167 [label="Assignment"];
  node168 [label="IdentifierList"];
  node169 [label="Identifier: car1"];
  node168 -> node169;
  node167 -> node168;
  node170 [label="AssignOp: ="];
  node167 -> node170;
  node171 [label="FunctionCall"];
  node172 [label="Identifier: Car"];
  node171 -> node172;
  node173 [label="Delimiter: ("];
  node171 -> node173;
  node174 [label="Arguments"];
  node175 [label="Literal: \"Honda\""];
  node174 -> node175;
  node171 -> node174;
  node176 [label="Delimiter: )"];
  node171 -> node176;
  node167 -> node171;
  node166 -> node167;
  node177 [label="ExpressionStatement"];
  node178 [label="FunctionCall"];
  node179 [label="AttributeAccess"];
  node180 [label="Identifier: car1"];
  node179 -> node180;
  node181 [label="Delimiter: ."];
  node179 -> node181;
  node182 [label="Identifier: display"];
  node179 -> node182;
  node178 -> node179;
  node183 [label="Delimiter: ("];
  node178 -> node183;
  node184 [label="Arguments"];
  node178 -> node184;
  node185 [label="Delimiter: )"];
  node178 -> node185;
  node177 -> node178;
  node166 -> node177;
  node186 [label="FunctionCallStatement"];
  node187 [label="Identifier: print"];
  node186 -> node187;
  node188 [label="Delimiter: ("];
  node186 -> node188;
  node189 [label="Arguments"];
  node190 [label="FunctionCall"];
  node191 [label="AttributeAccess"];
  node192 [label="AttributeAccess"];
  node193 [label="Identifier: car1"];
  node192 -> node193;
  node194 [label="Delimiter: ."];
  node192 -> node194;
  node195 [label="Identifier: name"];
  node192 -> node195;
  node191 -> node192;
  node196 [label="Delimiter: ."];
  node191 -> node196;
  node197 [label="Identifier: upper"];
  node191 -> node197;
  node190 -> node191;
  node198 [label="Delimiter: ("];
  node190 -> node198;
  node199 [label="Arguments"];
  node190 -> node199;
  node200 [label="Delimiter: )"];
  node190 -> node200;
  node189 -> node190;
  node186 -> node189;
  node201 [label="Delimiter: )"];
  node186 -> node201;
  node166 -> node186;
  node202 [label="Assignment"];
  node203 [label="IdentifierList"];
  node204 [label="Identifier: x"];
  node203 -> node204;
  node202 -> node203;
  node205 [label="AssignOp: ="];
  node202 -> node205;
  node206 [label="TernaryOp"];
  node207 [label="Literal: 1"];
  node206 -> node207;
  node208 [label="Keyword: if"];
  node206 -> node208;
  node209 [label="Keyword: True"];
  node206 -> node209;
  node210 [label="Keyword: else"];
  node206 -> node210;
  node211 [label="Literal: 2"];
  node206 -> node211;
  node202 -> node206;
  node166 -> node202;
  node212 [label="FunctionCallStatement"];
  node213 [label="Identifier: print"];
  node212 -> node213;
  node214 [label="Delimiter: ("];
  node212 -> node214;
  node215 [label="Arguments"];
  node216 [label="TernaryOp"];
  node217 [label="Literal: \"yes\""];
  node216 -> node217;
  node218 [label="Keyword: if"];
  node216 -> node218;
  node219 [label="Keyword: True"];
  node216 -> node219;
  node220 [label="Keyword: else"];
  node216 -> node220;
  node221 [label="Literal: \"no\""];
  node216 -> node221;
  node215 -> node216;
  node212 -> node215;
  node222 [label="Delimiter: )"];
  node212 -> node222;
  node166 -> node212;
  node223 [label="Assignment"];
  node224 [label="IdentifierList"];
  node225 [label="Identifier: y"];
  node224 -> node225;
  node223 -> node224;
  node226 [label="AssignOp: ="];
  node223 -> node226;
  node227 [label="Comparison"];
  node228 [label="Literal: 10"];
  node227 -> node228;
  node229 [label="ComparisonOp: <"];
  node227 -> node229;
  node230 [label="ParenExpr"];
  node231 [label="Delimiter: ("];
  node230 -> node231;
  node232 [label="TernaryOp"];
  node233 [label="Identifier: x"];
  node232 -> node233;
  node234 [label="Keyword: if"];
  node232 -> node234;
  node235 [label="Keyword: True"];
  node232 -> node235;
  node236 [label="Keyword: else"];
  node232 -> node236;
  node237 [label="Identifier: y"];
  node232 -> node237;
  node230 -> node232;
  node238 [label="Delimiter: )"];
  node230 -> node238;
  node227 -> node230;
  node223 -> node227;
  node166 -> node223;
  node239 [label="Assignment"];
  node240 [label="IdentifierList"];
  node241 [label="Identifier: my_list"];
  node240 -> node241;
  node239 -> node240;
  node242 [label="AssignOp: ="];
  node239 -> node242;
  node243 [label="List"];
  node244 [label="Delimiter: ["];
  node243 -> node244;
  node245 [label="Literal: 1"];
  node243 -> node245;
  node246 [label="Delimiter: ,"];
  node243 -> node246;
  node247 [label="Literal: 2"];
  node243 -> node247;
  node248 [label="Delimiter: ,"];
  node243 -> node248;
  node249 [label="TernaryOp"];
  node250 [label="Literal: 3"];
  node249 -> node250;
  node251 [label="Keyword: if"];
  node249 -> node251;
  node252 [label="Keyword: False"];
  node249 -> node252;
  node253 [label="Keyword: else"];
  node249 -> node253;
  node254 [label="Literal: 4"];
  node249 -> node254;
  node243 -> node249;
  node255 [label="Delimiter: ]"];
  node243 -> node255;
  node239 -> node243;
  node166 -> node239;
  node159 -> node166;
  node0 -> node159;
  node256 [label="IfStatement"];
  node257 [label="Keyword: if"];
  node256 -> node257;
  node258 [label="Comparison"];
  node259 [label="Identifier: __name__"];
  node258 -> node259;
  node260 [label="ComparisonOp: =="];
  node258 -> node260;
  node261 [label="Literal: \"__main__\""];
  node258 -> node261;
  node256 -> node258;
  node262 [label="Suite"];
  node263 [label="FunctionCallStatement"];
  node264 [label="Identifier: main"];
  node263 -> node264;
  node265 [label="Delimiter: ("];
  node263 -> node265;
  node266 [label="Arguments"];
  node263 -> node266;
  node267 [label="Delimiter: )"];
  node263 -> node267;
  node262 -> node263;
  node256 -> node262;
  node0 -> node256;
}
